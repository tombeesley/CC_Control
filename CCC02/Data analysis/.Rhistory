}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
# mutate column based on blocked and control patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
data <- data %>%
select(-oldSNum, -phase, -tLoc, -tOrient, -resp) %>% # remove irrelevant variables
mutate(epoch = ceiling(block/4)) %>%
mutate(phase = ceiling(block/20)) %>%
select(subj, phase, epoch, block:patType, patArrowP1, everything()) # reorder variables
factorCols <- c("subj","TT","patType", "patArrowP1", "tQuad")
data[factorCols] <- lapply(data[factorCols], factor)
data$TT <- recode_factor(data$TT, "1" = "repeated", "2" = "random")
data$patArrowP1 <- recode_factor(data$patArrowP1, "1" = "arrow", "2" = "no arrow")
# get basic stats
basic_stats <- data %>%
group_by(subj) %>%
summarise(mean_RT = mean(RT),
mean_Acc = mean(acc!=9999),
num_TO = sum(acc==9999),
num_trials = n())
# remove inaccurate trials and outlier RTs
data_NO <- data %>%
filter(acc==1) %>%
group_by(subj) %>%
mutate(zRT = scale(RT)) %>%
filter(between(zRT,-2.5, 2.5)) %>%
select(-zRT)
factorLbls <- c("Repeated: Arrow", "Random: Arrow", "Repeated: No arrow", "Random: No arrow")
# graphing effect across epochs, phase 1 and 2
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()+
geom_point(aes(fill = interaction(TT, patArrowP1), shape = interaction(TT, patArrowP1)), size = 3) +
scale_fill_manual(name = "",
labels = factorLbls,
values=c("black", "black", "white", "white")) +
scale_shape_manual(name = "",
labels = factorLbls,
values = c(21,22,21,22))+
scale_x_continuous(limits = c(1,10), breaks = 1:10)
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "td", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "td") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
data
data %>% view()
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "ad", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "ad") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data %>% view()
data
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "td", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "td") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
View(data)
data %>% group_by(subj) %>% slice(1) %>% view()
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "ad", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "ad") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = as.numeric(substr(subjs[subj],1,2))) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, trial = X1, TT = X2, patType = X3,
tLoc = X4, tOrient = X5, resp = X6, acc = X7, RT = X8)
# mutate column based on arrow/no-arrow patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
subj %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
subj %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
subj %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
subj %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
subj %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
subj %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
subj %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
subj %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
tQuad
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = as.numeric(substr(subjs[subj],1,2))) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, trial = X1, TT = X2, tQuad = X3,
tLoc = X4, tOrient = X5, resp = X6, acc = X7, RT = X8)
# mutate column based on arrow/no-arrow patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
subj %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
subj %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
subj %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
subj %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
subj %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
subj %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
subj %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
subj %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
# mutate column based on arrow/no-arrow patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
subj %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
subj %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
subj %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
subj %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1
)))
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = as.numeric(substr(subjs[subj],1,2))) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, trial = X1, TT = X2, tQuad = X3,
tLoc = X4, tOrient = X5, resp = X6, acc = X7, RT = X8)
# mutate column based on arrow/no-arrow patterns
data <- data %>%
mutate(TT = as.factor(case_when(
subj %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ "rep_arrow",
subj %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ "rep_no_arrow",
subj %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ "rep_no_arrow",
subj %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ "rep_arrow",
TT==3 ~ "random"
)))
data %>%
group_by(TT) %>%
summarise(mean(acc))
data %>%
filter(!acc==9999) %>%
group_by(TT) %>%
summarise(mean(acc))
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(mean(acc))
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
{pairwise.t.test(TT~ propCor, data = .)}
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
{pairwise.t.test(TT, propCor, data = .)}
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc))
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
{pairwise.t.test(propCor, TT, data = .)}
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
{pairwise.t.test(x = .$propCor, g = .$TT, data = .)}
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
pivot_wider(names_from = TT, values_from = propCor)
data %>%
filter(!acc==9999) %>%
group_by(subj, TT) %>%
summarise(propCor = mean(acc)) %>%
pivot_wider(names_from = TT, values_from = propCor) %>%
write_csv("output_awareness_data.csv")
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "td", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "td") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
# mutate column based on blocked and control patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
data <- data %>%
select(-oldSNum, -phase, -tLoc, -tOrient, -resp) %>% # remove irrelevant variables
mutate(epoch = ceiling(block/4)) %>%
mutate(phase = ceiling(block/20)) %>%
select(subj, phase, epoch, block:patType, patArrowP1, everything()) # reorder variables
factorCols <- c("subj","TT","patType", "patArrowP1", "tQuad")
data[factorCols] <- lapply(data[factorCols], factor)
data$TT <- recode_factor(data$TT, "1" = "repeated", "2" = "random")
data$patArrowP1 <- recode_factor(data$patArrowP1, "1" = "arrow", "2" = "no arrow")
# get basic stats
basic_stats <- data %>%
group_by(subj) %>%
summarise(mean_RT = mean(RT),
mean_Acc = mean(acc!=9999),
num_TO = sum(acc==9999),
num_trials = n())
# remove inaccurate trials and outlier RTs
data_NO <- data %>%
filter(acc==1) %>%
group_by(subj) %>%
mutate(zRT = scale(RT)) %>%
filter(between(zRT,-2.5, 2.5)) %>%
select(-zRT)
# graphing effect across epochs, phase 1 and 2
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()+
geom_point(aes(fill = interaction(TT, patArrowP1), shape = interaction(TT, patArrowP1)), size = 3) +
scale_fill_manual(name = "",
labels = factorLbls,
values=c("black", "black", "white", "white")) +
scale_shape_manual(name = "",
labels = factorLbls,
values = c(21,22,21,22))+
scale_x_continuous(limits = c(1,10), breaks = 1:10)
factorLbls <- c("Repeated: Arrow", "Random: Arrow", "Repeated: No arrow", "Random: No arrow")
# graphing effect across epochs, phase 1 and 2
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()+
geom_point(aes(fill = interaction(TT, patArrowP1), shape = interaction(TT, patArrowP1)), size = 3) +
scale_fill_manual(name = "",
labels = factorLbls,
values=c("black", "black", "white", "white")) +
scale_shape_manual(name = "",
labels = factorLbls,
values = c(21,22,21,22))+
scale_x_continuous(limits = c(1,10), breaks = 1:10)
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT))
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
geom_line() +
geom_point()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
geom_line() +
geom_point()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT)) +
geom_line() +
geom_point()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, colour = TT)) +
geom_line() +
geom_point()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, colour = TT, shape = patArrowP1)) +
geom_line() +
geom_point()
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT)) +
geom_line() +
geom_point(aes(colour = TT, shape = patArrowP1))
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT)) +
geom_line(aes(colour = TT, shape = patArrowP1)) +
geom_point(aes(colour = TT, shape = patArrowP1))
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT)) +
geom_line(aes(colour = TT, linetype = patArrowP1)) +
geom_point(aes(colour = TT, shape = patArrowP1))
geom_line(aes(group = interaction(TT, patArrowP1)) +
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "td", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "td") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
# mutate column based on blocked and control patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
data <- data %>%
select(-oldSNum, -phase, -tLoc, -tOrient, -resp) %>% # remove irrelevant variables
mutate(epoch = ceiling(block/4)) %>%
mutate(phase = ceiling(block/20)) %>%
select(subj, phase, epoch, block:patType, patArrowP1, everything()) # reorder variables
factorCols <- c("subj","TT","patType", "patArrowP1", "tQuad")
data[factorCols] <- lapply(data[factorCols], factor)
data$TT <- recode_factor(data$TT, "1" = "repeated", "2" = "random")
data$patArrowP1 <- recode_factor(data$patArrowP1, "1" = "arrow", "2" = "no arrow")
# get basic stats
basic_stats <- data %>%
group_by(subj) %>%
summarise(mean_RT = mean(RT),
mean_Acc = mean(acc!=9999),
num_TO = sum(acc==9999),
num_trials = n())
# remove inaccurate trials and outlier RTs
data_NO <- data %>%
filter(acc==1) %>%
group_by(subj) %>%
mutate(zRT = scale(RT)) %>%
filter(between(zRT,-2.5, 2.5)) %>%
select(-zRT)
factorLbls <- c("Repeated: Arrow", "Random: Arrow", "Repeated: No arrow", "Random: No arrow")
# playing with figures for tuition - delete later
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT)) +
geom_line(aes(group = interaction(TT, patArrowP1))) +
geom_point(aes(colour = TT, shape = patArrowP1))
# graphing effect across epochs, phase 1 and 2
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()+
geom_point(aes(fill = interaction(TT, patArrowP1), shape = interaction(TT, patArrowP1)), size = 3) +
scale_fill_manual(name = "",
labels = factorLbls,
values=c("black", "black", "white", "white")) +
scale_shape_manual(name = "",
labels = factorLbls,
values = c(21,22,21,22))+
scale_x_continuous(limits = c(1,10), breaks = 1:10)
rm(list=ls())
library(tidyverse)
library(broom)
fnams <- list.files("CSV Data", "td", full.names = TRUE) # needed for reading data
subjs <- list.files("CSV Data", "td") # needed for identifying subject numbers
data <- NULL
for (subj in 1:length(fnams)) {
pData <- read_csv(fnams[subj], col_types = cols(), col_names = FALSE) # read the data from csv
pData <- pData %>%
mutate(subj = substr(subjs[subj],1,2)) %>%
select(subj,everything())
data <- rbind(data, pData) # combine data array with existing data
}
data <- rename(data, oldSNum = X1, phase = X2, block = X3, trial = X4, TT = X5, patType = X6,
tQuad = X7, tLoc = X8, tOrient = X9, arrow = X10, resp = X11, acc = X12, RT = X13)
# mutate column based on blocked and control patterns
data <- data %>%
mutate(patArrowP1 = as.factor(case_when(
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 1 & TT==1 & tQuad %in% c(2,3) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 1 & TT==2 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(1,4) ~ 2,
oldSNum %% 2 == 0 & TT==1 & tQuad %in% c(2,3) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(1,4) ~ 1,
oldSNum %% 2 == 0 & TT==2 & tQuad %in% c(2,3) ~ 2,
)))
data <- data %>%
select(-oldSNum, -phase, -tLoc, -tOrient, -resp) %>% # remove irrelevant variables
mutate(epoch = ceiling(block/4)) %>%
mutate(phase = ceiling(block/20)) %>%
select(subj, phase, epoch, block:patType, patArrowP1, everything()) # reorder variables
factorCols <- c("subj","TT","patType", "patArrowP1", "tQuad")
data[factorCols] <- lapply(data[factorCols], factor)
data$TT <- recode_factor(data$TT, "1" = "repeated", "2" = "random")
data$patArrowP1 <- recode_factor(data$patArrowP1, "1" = "arrow", "2" = "no arrow")
# get basic stats
basic_stats <- data %>%
group_by(subj) %>%
summarise(mean_RT = mean(RT),
mean_Acc = mean(acc!=9999),
num_TO = sum(acc==9999),
num_trials = n())
# remove inaccurate trials and outlier RTs
data_NO <- data %>%
filter(acc==1) %>%
group_by(subj) %>%
mutate(zRT = scale(RT)) %>%
filter(between(zRT,-2.5, 2.5)) %>%
select(-zRT)
factorLbls <- c("Repeated: Arrow", "Random: Arrow", "Repeated: No arrow", "Random: No arrow")
# graphing effect across epochs, phase 1 and 2
data_NO %>%
group_by(TT, patArrowP1, epoch) %>%
summarise(meanRT = mean(RT)) %>%
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, patArrowP1))) +
theme_classic(base_size = 14) +
geom_line()+
geom_point(aes(fill = interaction(TT, patArrowP1), shape = interaction(TT, patArrowP1)), size = 3) +
scale_fill_manual(name = "",
labels = factorLbls,
values=c("black", "black", "white", "white")) +
scale_shape_manual(name = "",
labels = factorLbls,
values = c(21,22,21,22))+
scale_x_continuous(limits = c(1,10), breaks = 1:10)
